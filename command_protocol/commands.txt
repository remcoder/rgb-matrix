commands
--------

these commands are optimized for size and based on a 8x8 rgb matrix
	- a nice option would be to base the actual sizes of the commands at runtim
	based on the size of the matrix and possible the color options too.
	This would yield an optimal protocol that is flexible for many displays.

pxl:	| x , y | = 1 byte
	- draw pixel

vli	 | column , start, length | = 3 bytes (could be 2)
	- draw vertical line

hli	 | row , start, length | = 3 bytes (could be 2)
	- draw horizontal line

lin  | x1,y2 | x2,y2 | = 2 bytes
	- draw a line

rct  | x1,y2 | x2,y2 | = 2 bytes
	- draw a rectangle

rcb  | x1,y2 | x2,y2 | = 2 bytes
	- draw a rectangle border

col  | r | g | b | = 3 bytes
	- set color

clr
	- clear

cir
	- draw a circle

bmp	64 x | r | g | b | = 192 bytes
	- draw a full color bitmap
	- (may a variant that takes less bytes would be nice)

msk	8 x | row | = 8 bytes
	- draw a single color bitmap using current color. zeros are skipped
